//
// KISSmetricsSDK
//
// KISSmetricsAPI.h
//
// Copyright 2014 KISSmetrics
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



#import <Foundation/Foundation.h>

typedef NS_ENUM(NSInteger, KMARecordCondition) {
    KMARecordAlways,
    KMARecordOncePerInstall,
    KMARecordOncePerIdentity
};


@interface KISSmetricsAPI : NSObject


//-------------------
// + sharedAPIWithKey
//
// Return Value:
// The Singleton KISSmetricsAPI instance.
//
// Discussion:
// You are required to call this method if your project DOES NOT include the KISSmetricsAPI_options.m file.
// If your project does include KISSmetricsAPI_options.m, the API key defined in your options will be used and calls to
// this method will be ignored.
//---
+ (KISSmetricsAPI *) sharedAPIWithKey:(NSString *)apiKey;



//------------
// + sharedAPI
//
// Return Value:
// The singleton KISSmetricsAPI instance.
//
// Discussion:
// Returns the singleton instance of KISSmetricsAPI
//---
+ (KISSmetricsAPI *)sharedAPI;



//------------
// - identify:
//
// Associates an identity (such as an email address) with a user.
//
// Parameters:
// - identity: An NSString identifying the current user. If nil or an empty string, this call is a no-op.
//
// Discussion:
// You can associate multiple identities with a user; The KISSmetrics website will allow you to view all identities
// associated with any given user. The API will persist the latest identity between sessions.
//---
- (void)identify:(NSString *)identity;



//-----------
// - identity
//
// Discussion:
// Returns the last set identity
//---
- (NSString*)identity;



//----------------
// - clearIdentity
//
// Clears the last set identity.
//
// Discussion:
// You can clear the last set identity after a user logs out or when the user is known to have changed to prevent the
// activity of separate users from being attributed to the same identity.
//---
- (void)clearIdentity;



//----------------------
// - alias:withIdentity:
//
// Associates two identities (such as an email address and a name) with a user.
//
// Parameters:
// - firstIdentity: An NSString containing the first identity. If nil or an empty string, this call is a no-op.
// - secondIdentity: An NSString containing the second identity. If nil or an empty string, this call is a no-op.
//
// Discussion:
// You can associate multiple identities with a user; the KISSMetrics website will allow you to view all identities
// associated with any given user. Unlike identify, this method will NOT persist any identities.
//---
- (void)alias:(NSString *)firstIdentity withIdentity:(NSString *)secondIdentity;



//-------------------------
// - record:withProperties:
//
// Records an event with an optional set of properties.
//
// Parameters:
// - eventName: An NSString identifying this event.
//
// - properties: An NSDictionary of properties. The keys must all be non-nil, non-empty
// NSStrings. The values must all be non-nil, non-empty NSStrings or NSNumber. Any key/value
// pair that does not conform to this will be dropped with a warning message displayed on the log.
//
// Discussion:
//
// In theory you can make your event name as long as you like, and send as many properties as you want
// up to about 8KB, but in practice, as this API makes HTTPS GET calls to KISSmetrics' servers you will
// eventually hit the maximum URL length allowed by KISSmetrics servers. Anything where the total URL
// generated by the API is > 2000 characters will generate a warning message on the logs.
//---
- (void)record:(NSString *)eventName withProperties:(NSDictionary *)properties;



//----------
// - record:
//
// Shorthand method for recording events with no properties.
//
// Discussion:
//
// In theory you can make your event name as long as you like, but in practice, as this API makes HTTPS GET calls to
// KISSmetrics' servers you will eventually hit the maximum URL length allowed by KISSmetrics servers. Anything where
// the total URL generated by the API is > 2000 characters will generate a warning message on the logs.
//---
- (void)record:(NSString *)eventName;



// deprecated method
//
// Use record:withProperties: instead
- (void)recordEvent:(NSString *)eventName withProperties:(NSDictionary *)properties __attribute((deprecated("use method record:withProperties: instead")));



//---------------------------------------
// - record: withProperties: onCondition:
//
// Records an event per identity or install depending on the KMSRecordCondition that's passed.
//
// Parameters
// - name: An NSString identifying this event.
//
// - properties: An NSDictionary of properties. The keys must all be non-nil, non-empty
// NSStrings. The values must all be non-nil, non-empty NSStrings or NSNumber. Any key/value
// pair that does not conform to this will be dropped with a warning message displayed on the log.
// These properties will be ignored if the condition param is not met.
//
// - condition: A KMSRecordCondition (KMSRecordOncePerInstall | KMSRecordOncePerIdentity)
//
// Using KMSRecordOncePerInstall - The event will only be recorded once during the lifetime of the application's
// installation. If the event has already been recorded, any properties passed will also be ignored.
//
// Using KMSRecordOncePerIdentity - The event will only be recorded once until the identity changes or is cleared via
// clearIdentity. If the event has already been recorded, any properties passed will also be ignored.
//---
- (void)record:(NSString *)eventName withProperties:(NSDictionary *)properties onCondition:(KMARecordCondition)condition;



//-----------------------
// - record: onCondition:
//
// Shorthand method for recording events on condition with no properties.
//---
- (void)record:(NSString *)eventName onCondition:(KMARecordCondition)condition;



// deprecated method
//
// Use record:onCondition: instead
- (void)recordOnce:(NSString *)eventName __attribute((deprecated("use method record:onCondition: instead")));



//-------
// - set:
//
// Sets one or more properties on a user.
//
// Parameters:
//
// - properties: An NSDictionary of properties. The keys must all be non-nil, non-empty NSStrings.
// The values must all be non-nil, non-empty NSStrings or NSNumber. Any key/value pair that does
// not conform to this will be dropped with a warning message displayed on the log.
//
//
// Discussion:
//
// In theory you can send as many properties as you want up to about 8KB, but in practice, as this API
// makes HTTPS GET calls to KISSmetrics' servers you will eventually hit the maximum URL length allowed by
// KISSmetrics servers. Anything where the total URL generated by the API is > 2000 characters will
// generate a warning message on the logs.
//---
- (void)set:(NSDictionary *)properties;



// deprecated method
//
// Use set: instead
- (void)setProperties:(NSDictionary *)properties __attribute((deprecated("use method set: instead")));



//---------------------
// - setDistinct: forKey:
//
// Sets one property on a user per identity only if the provided value is different
// than the previously set value or if a value has not yet been set for the property. If an identity is
// cleared via clearIdentity, these properties may again be set for the next identity.
//---
- (void)setDistinct:(NSObject*)propertyValue forKey:(NSString*)propertyKey;



//-----------------------
// - autoRecordAppLifecycle
//
// Automatically records the following events
// "Launched Application"
// "Application moved to background"
// "Application became active"
// "Application Terminated"
//---
- (void)autoRecordAppLifecycle;



//-------------------
// - autoRecordInstalls
//
// Automatically records the following events
// "Installed App"
// "Updated App"
//---
- (void)autoRecordInstalls;



//--------------------------
// - autoSetHardwareProperties
//
// Automatically collects and sets the following hardware properties as distinct properties:
// "Device Platform" : (iPhone, iPad)
// "Device Model" : (iPhone 5S, iPhone 5C)
// "System Name" : (iOS)
// "System Version" : (7.1)
//---
- (void)autoSetHardwareProperties;



//---------------------
// - autoSetAppProperties
//
// Automatically collects and sets the following applcation properties as distinct properties:
// "App Version" : (1.0)
// "App Build" : (1.0)
//---
- (void)autoSetAppProperties;


@end



// Full deperecated class
__attribute__((deprecated))
@interface KISSMetricsAPI : NSObject

+ (KISSMetricsAPI *) sharedAPIWithKey:(NSString *)apiKey;
+ (KISSMetricsAPI *) sharedAPI;
- (void)recordEvent:(NSString *)eventName withProperties:(NSDictionary *)properties;
- (void)setProperties:(NSDictionary *)properties;
- (void)identify:(NSString *)identity;
- (NSString *)identity;
- (void)clearIdentity;
- (void)alias:(NSString *)firstIdentity withIdentity:(NSString *)secondIdentity;

@end
